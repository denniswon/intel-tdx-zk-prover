# Stage 1: Builder
FROM rust:1.86-slim-bookworm AS builder

# Install system dependencies for SQLx
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    libssl-dev \
    build-essential \
    pkg-config \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy the Cargo manifest
WORKDIR /usr/src/tdx-prover
COPY Cargo.toml Cargo.lock ./
COPY .env ./

# Copy the source code
COPY src ./src

# Copy SQLx metadata and migrations
COPY .sqlx .sqlx
COPY migrations migrations

# Build the project in release mode with SQLx offline mode
ENV SQLX_OFFLINE=true
RUN cargo build --release

# Stage 2: Final image
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    libssl-dev \
    libpq5 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy the binary from the builder stage
COPY --from=builder /usr/src/tdx-prover/target/release/tdx-prover /usr/local/bin/

# Copy SQLx metadata and migrations
COPY --from=builder /usr/src/tdx-prover/.sqlx .sqlx
COPY --from=builder /usr/src/tdx-prover/migrations migrations
COPY --from=builder /usr/src/tdx-prover/.env ./.env

# Set environment variables
ENV RUST_LOG=info
ENV DATABASE_URL=postgres://postgres:postgres@localhost:5432/newton
ENV SQLX_OFFLINE=true

# Expose the port your application runs on
EXPOSE 8002

# Run the application
CMD ["tdx-prover"]
