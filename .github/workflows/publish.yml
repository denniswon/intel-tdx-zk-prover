name: Publish Workflow

on:
  workflow_call:
    inputs:
      aws_account:
        description: 'The aws_account for the ECR'
        type: string
        required: true
      aws_region:
        description: 'The aws_region for the ECR'
        type: string
        required: true
      aws_role_name:
        description: 'The aws_role_name for the ECR'
        type: string
        required: true
      python:
        description: 'The Python version for the ECR'
        type: string
    outputs:
      image_tag:
        description: The image tag
        value: ${{ jobs.base.outputs.image_tag }}

permissions:
  pull-requests: write # so we can comment on PR
  id-token: write # This is required for aws creds requesting the JWT
  contents: read  # This is required for aws creds actions/checkout

env:
  OPS_ECR_REPOSITORY: 584864542664.dkr.ecr.us-west-2.amazonaws.com/tdx-prover

jobs:
  base:
    outputs:
      image_tag: ${{ steps.git-commit.outputs.image_tag }}
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4

    ## Can't think of why I need python to build docker and push to ECR
    # - uses: actions/setup-python@v5
    #   with:
    #     python-version: ${{ inputs.python }}
    #     cache: 'pip'
    #     cache-dependency-path: 'requirements.txt'

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ inputs.aws_account }}:role/${{ inputs.aws_role_name }}
        aws-region: ${{ inputs.aws_region }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Get short git hash
      id: git-commit
      run: |
        echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "datetime=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Build And Push Image
      uses: docker/build-push-action@v6
      with:
        push: true
        file : Dockerfile.fake
        context: ./
        tags: |
          ${{ env.OPS_ECR_REPOSITORY }}:${{ env.short_sha }}
          ${{ env.OPS_ECR_REPOSITORY }}:latest
        cache-to: mode=max,image-manifest=true,oci-mediatypes=true,type=registry,ref=${{ env.OPS_ECR_REPOSITORY }}:cache
        cache-from: type=registry,ref=${{ env.OPS_ECR_REPOSITORY }}:cache
